 namespace  std  {
class  nullptr_t  {
public:
        //  Required  in  order  to  create  const  nullptr_t  objects  without  an
        //  explicit  initializer  in  GCC  4.5,  a  la:
        //
        //  const  std::nullptr_t  nullptr;
        nullptr_t()  {  }

        //  Make  nullptr  convertible  to  any  pointer  type.
        template&amp;lt;typename  T&amp;gt;  operator  T*()  const  {  return  0;  }
        //  Make  nullptr  convertible  to  any  member  pointer  type.
        template&amp;lt;typename  C,  typename  T&amp;gt;  operator  T  C::*()  {  return  0;  }
private:
        //  Do  not  allow  taking  the  address  of  nullptr.
        void  operator&amp;amp;();
};
}

const  std::nullptr_t  nullptr;
 
