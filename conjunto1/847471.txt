 #include  "InitSock.h"
#include  &amp;lt;stdio.h&amp;gt;
#include  &amp;lt;iostream&amp;gt;    
#include  &amp;lt;process.h&amp;gt;
using  namespace  std;

CInitSock  initSock;          //  init  lib  Winsock

#include  "SocketDll.h"  

void  startSocket()  
{  
        //  port  forwarding(mapping)
        system("adb  forward  tcp:8081  tcp:8082");

        //  new  socket
        SOCKET  s  =  ::socket(AF_INET,  SOCK_STREAM,  IPPROTO_TCP);
        if(s  ==  INVALID_SOCKET)
        {
                printf("  Failed  socket()  /n");
                return;
        }

        sockaddr_in  servAddr;  
        servAddr.sin_family  =  AF_INET;
        servAddr.sin_port  =  htons(8081);

        //  set  up  ip
        servAddr.sin_addr.S_un.S_addr  =  inet_addr("127.0.0.1");

        if(::connect(s,  (sockaddr*)&amp;amp;servAddr,  sizeof(servAddr))  ==  -1)
        {
                printf("  Failed  connect()  /n");
                return;
        }  else  {
                cout  &amp;lt;&amp;lt;  "connect  successed!"  &amp;lt;&amp;lt;  endl;
        }

        char  buff[256];
        char  szText[256]  ;

        while(TRUE)
        {
                //  send  datas  to  server
                cin&amp;gt;&amp;gt;szText  ;
                szText[255]  =  '/0';
                ::send(s,  szText,  strlen(szText),  0)  ;

                //  receiver  datas  from  server
                int  nRecv  =  ::recv(s,  buff,  256,  0);
                if(nRecv  &amp;gt;  0)
                {
                        buff[nRecv]  =  '/0';
                        printf("data  receivedï¼š%s/n",  buff);
                }

        }

        //  close  socket
        ::closesocket(s);  
}  
 
