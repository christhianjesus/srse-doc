 unsigned  fun1  (  const  unsigned  char  *p,  unsigned  *x  )
{
        unsigned  sum;
        unsigned  sqsum;
        int  i;
        unsigned  f;


        sum  =  0;
        sqsum  =  0;
        for(i=0;  i&amp;lt;8;  i++)
        {
                f  =  *p++;
                sum  +=  f;
                sqsum  +=  f*f;
        }
        //to  keep  the  compiler  from  optimizing
        //stuff  out
        x[0]=sum;
        return(sqsum);
}

unsigned  fun2  (  const  unsigned  char  *p,  unsigned  *x    )
{
        unsigned  sum;
        unsigned  sqsum;
        int  i;
        unsigned  f;


        sum  =  0;
        sqsum  =  0;
        for(i=8;i--;)
        {
                f  =  *p++;
                sum  +=  f;
                sqsum  +=  f*f;
        }
        //to  keep  the  compiler  from  optimizing
        //stuff  out
        x[0]=sum;
        return(sqsum);
}

unsigned  fun3  (  const  unsigned  char  *p,  unsigned  *x  )
{
        unsigned  sum;
        unsigned  sqsum;
        int  i;

        sum  =  0;
        sqsum  =  0;
        for(i=0;  i&amp;lt;8;  i++)
        {
                sum  +=  (unsigned)p[i];
                sqsum  +=  ((unsigned)p[i])*((unsigned)p[i]);
        }
        //to  keep  the  compiler  from  optimizing
        //stuff  out
        x[0]=sum;
        return(sqsum);
}

unsigned  fun4  (  const  unsigned  char  *p,  unsigned  *x  )
{
        unsigned  sum;
        unsigned  sqsum;
        int  i;

        sum  =  0;
        sqsum  =  0;
        for(i=8;  i;i--)
        {
                sum  +=  (unsigned)p[i-1];
                sqsum  +=  ((unsigned)p[i-1])*((unsigned)p[i-1]);
        }
        //to  keep  the  compiler  from  optimizing
        //stuff  out
        x[0]=sum;
        return(sqsum);
}
 
