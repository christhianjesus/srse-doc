 vector&amp;lt;int&amp;gt;  dataVec;

int  dataArray[]  =  {  1,  2,  3,  4,  5,  6,  7,  8,  9,  10  };
unsigned  dataArraySize  =  sizeof(dataArray)  /  sizeof(int);

//  Method  1:  Copy  the  array  to  the  vector  using  back_inserter.
{
        copy(&amp;amp;dataArray[0],  &amp;amp;dataArray[dataArraySize],  back_inserter(dataVec));
}

//  Method  2:  Same  as  1  but  pre-extend  the  vector  by  the  size  of  the  array  using  reserve
{
        dataVec.reserve(dataVec.size()  +  dataArraySize);
        copy(&amp;amp;dataArray[0],  &amp;amp;dataArray[dataArraySize],  back_inserter(dataVec));
}

//  Method  3:  Memcpy
{
        dataVec.resize(dataVec.size()  +  dataArraySize);
        memcpy(&amp;amp;dataVec[dataVec.size()  -  dataArraySize],  &amp;amp;dataArray[0],  dataArraySize  *  sizeof(int));
}

//  Method  4:  vector::insert
{
        dataVec.insert(dataVec.end(),  &amp;amp;dataArray[0],  &amp;amp;dataArray[dataArraySize]);
}

//  Method  5:  vector  +  vector
{
        vector&amp;lt;int&amp;gt;  dataVec2(&amp;amp;dataArray[0],  &amp;amp;dataArray[dataArraySize]);
        dataVec.insert(dataVec.end(),  dataVec2.begin(),  dataVec2.end());
}
 
